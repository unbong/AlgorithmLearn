第6章 树

二叉树

６−１二分木の最大要素を求めるアルゴリズムを示す

６−２再帰を使わずに二分木の最大要素を求めるアルゴリズム

６−３二分木で要素を探索するアルゴリズム

6-4再帰を使わず二分木で要素を探索する

６−５二分木に要素を挿入する 
  6-5−１ レベル順序横断
  		１．根を訪問
  		２．レベルｌを横断するときにｌ＋１の全要素をキューに保存する
  		３．次のレベルに行って、そのレベルの全ノードを訪問する
  		４．全レベルを完了するまで、これを繰り返す
 
 6-６ 二分木のサイズをもとめるアルゴリズム

 ６−７再帰を使わずに６−６を解決する

 ６−８逆順でレベル順にデータを印刷するアルゴリズム　出力は４５６７２３１

 6-9 木を削除するアルゴリズム

 ６−１０　二分木の高さ或いは深さを求めるアルゴリズム

 ６−１１再帰を使わずに６−１０を解決

 6-25 ある２つ木が鏡像になっているかをチェックするアルゴリズム

 6−26　二分木の2つのノードのLCA(最小共通祖先)

 6−27　間順序及び前順序横断結果から、二分木を構築するアルゴリズム

 6−28　2つの横断があるとき、二分木を一意に構築？


6-29~ 6-35 

6−44　全K分木では、各ノードが０またはK個の子を持つ。全K分木の前順序横断を保持する配列がある時、全K分木を構成するアルゴリズム
	
